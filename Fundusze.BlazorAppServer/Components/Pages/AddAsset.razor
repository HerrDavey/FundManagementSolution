@page "/assets/add"
@rendermode InteractiveServer

@inject HttpClient Http
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<PageTitle>Dodaj Aktywo</PageTitle>

<MudPaper Class="p-4 mx-auto" MaxWidth="500px">
    <MudForm @ref="_form" Model="_asset" @bind-IsValid="@_success">
        <MudText Typo="Typo.h3" Class="mb-4">Nowe Aktywo</MudText>

        <MudTextField @bind-Value="_asset.Name" Label="Nazwa aktywa" For="@(() => _asset.Name)" Required="true" />
        <MudTextField @bind-Value="_asset.Type" Label="Typ" For="@(() => _asset.Type)" Required="true" />
        <MudTextField @bind-Value="_asset.ISIN" Label="ISIN" For="@(() => _asset.ISIN)" Required="true" />

        @* POPRAWKA TUTAJ: Dodajemy 'm' do wartości Min *@
        <MudNumericField T="decimal" @bind-Value="_asset.Price" Label="Cena" For="@(() => _asset.Price)" Required="true" Min="0.01m" />

        <div class="d-flex align-center justify-space-between mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!_success)" OnClick="SubmitForm">
                Zapisz
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="BackToList">
                Powrót do listy
            </MudButton>
        </div>
    </MudForm>
</MudPaper>

@code {
    private MudForm _form = default!;
    private bool _success;

    private AssetDto _asset = new();

    private async Task SubmitForm()
    {
        await _form.Validate();
        if (!_success)
        {
            Snackbar.Add("Proszę poprawnie wypełnić formularz.", Severity.Warning);
            return;
        }

        var response = await Http.PostAsJsonAsync("api/asset", _asset);

        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add("Aktywo zostało zapisane!", Severity.Success);
            BackToList();
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            Snackbar.Add($"Wystąpił błąd podczas zapisu: {error}", Severity.Error);
        }
    }

    private void BackToList()
    {
        NavigationManager.NavigateTo("/assets");
    }
}
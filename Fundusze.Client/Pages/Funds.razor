@page "/funds"

@inject HttpClient Http
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<PageTitle>Fundusze</PageTitle>

<MudPaper Class="p-4">
    <div class="d-flex justify-space-between align-center mb-4">
        <MudText Typo="Typo.h5">Lista Dostępnych Funduszy</MudText>
    </div>

    @if (_funds is null)
    {
        <MudProgressCircular Indeterminate="true" />
    }
    else
    {
        <MudTable Items="@_funds" Hover="true" Breakpoint="Breakpoint.Sm">
            <HeaderContent>
                <MudTh>Nazwa</MudTh>
                <MudTh>Typ</MudTh>
                <MudTh>Zarządzający</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nazwa">@context.Name</MudTd>
                <MudTd DataLabel="Typ">@context.Type</MudTd>
                <MudTd DataLabel="Zarządzający">@context.Managed</MudTd>
            </RowTemplate>
        </MudTable>
    }
</MudPaper>

@code {
    private List<FundDto>? _funds;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _funds = await Http.GetFromJsonAsync<List<FundDto>>("api/fund");
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Błąd ładowania danych: {ex.Message}", Severity.Error);
        }
    }
}
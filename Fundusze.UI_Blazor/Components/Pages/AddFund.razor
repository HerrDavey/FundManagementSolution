@page "/funds/add"
@inject HttpClient Http
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager



@using Fundusze.Application.DTOs
@using MudBlazor

<PageTitle>Dodaj fundusz</PageTitle>

<MudPaper Class="p-4 mx-auto" MaxWidth="500px">
    <MudForm @ref="_form" Model="_fund" @bind-IsValid="@_success">
        <MudText Typo="Typo.h3" Class="mb-4">Nowy fundusz</MudText>

        <MudTextField @bind-Value="_fund.Name" Label="Nazwa funduszu" For="@(() => _fund.Name)" Required="true" />
        <MudTextField @bind-Value="_fund.Type" Label="Typ" For="@(() => _fund.Type)" Required="true" />
        <MudTextField @bind-Value="_fund.Managed" Label="Zarządzający" For="@(() => _fund.Managed)" Required="true" />
        <MudDatePicker @bind-Date="_fund.CreatedDate" Label="Data utworzenia" For="@(() => _fund.CreatedDate)" Required="true" />

        <div class="d-flex align-center justify-space-between mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!_success)" OnClick="SubmitForm">
                Zapisz
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="BackToList">
                Powrót do listy
            </MudButton>
        </div>
    </MudForm>
</MudPaper>

@code {
    private MudForm _form = default!;
    private bool _success;

    private FundDto _fund = new()
    {
        CreatedDate = DateTime.Now // Ustawienie domyślnej daty
    };

    /// <summary>
    /// Wysyła dane formularza na serwer.
    /// </summary>
    private async Task SubmitForm()
    {
        await _form.Validate();
        if (!_success)
        {
            Snackbar.Add("Proszę poprawnie wypełnić formularz.", Severity.Warning);
            return;
        }

        try
        {
            var response = await Http.PostAsJsonAsync("api/fund", _fund);

            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add("Fundusz został zapisany!", Severity.Success);
                BackToList(); // Przekieruj po sukcesie
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                Snackbar.Add($"Wystąpił błąd podczas zapisu: {error}", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Błąd: {ex.Message}", Severity.Error);
        }
    }

    private void BackToList()
    {
        NavigationManager.NavigateTo("/funds"); // Przekierowanie na listę funduszy
    }
}